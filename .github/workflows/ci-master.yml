on:
  push:
    branches:
      - master
      - feature/containerize

name: ci-master

env:
  REGISTRY: ghcr.io

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for mkdocs-git-authors-plugin

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-arch

      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: pip install -r requirements.txt
      
      - name: Build site
        run: mkdocs build
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wiki
          path: site/*
          retention-days: 7
          if-no-files-found: error

  containerize:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            Dockerfile
            requirements.txt
            mkdocs.yml
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: wiki
          path: site
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/wiki
          flavor: |
            latest=false
          tags: |
            type=raw,value={{branch}},enable=${{ github.ref_type == 'branch' && github.event_name != 'pull_request' }}
            type=raw,value=latest,enable=${{ steps.latest-tag.outputs.tag == github.ref_name }}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
